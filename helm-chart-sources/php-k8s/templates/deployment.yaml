{{ $global := .Values.global }}
{{- range .Values.apps }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .appName }}
  labels:
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}"
spec:
  {{- if not .autoscaling.enabled }}
  replicas: {{ .replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      name: {{ .appName }}
  template:
    metadata:
      labels:
        name: {{ .appName }}
    spec:
      {{- if .priority.enabled }}
      priorityClassName: {{ .priority.name }}
      {{- end }}
      containers:
        - name: cdn
        {{- if or .env .envSecrets }}
          env:
          {{- range $key, $value := .env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- range $key, $secret := .envSecrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ (split "/" $secret)._0 }}
                  key: {{ (split "/" $secret)._1 }}
          {{- end }}
        {{- end }}
          {{- $repository := .image.repository }}
          {{- $tag := .image.tag }}
          {{- $pullPolicy := .image.pullPolicy }}

          {{- if empty $repository }}
            {{- $repository := $global.image.repository }}
            {{- $tag := $.Values.global.image.tag }}
            {{- $pullPolicy := $.Values.global.pullPolicy }}
          image: '{{ $repository }}:{{ $tag }}'
          imagePullPolicy: {{  default "" $pullPolicy | quote }}
          {{- else }}
          image: '{{ $repository }}:{{ $tag }}'
          imagePullPolicy: {{  default "" $pullPolicy | quote }}
          {{- end }}
          ports:
            - containerPort: {{ default $.Values.global.port .port }}

          {{- $resources := coalesce .resources $global.resources "{}" }}
          resources:
            {{- if empty $resources}}
            {{- .resources }}
            {{- else }}
            {{- toYaml $resources | nindent 12 }}
            {{- end }}

        {{- with .healthchecks }}
          {{- if .enabled  }}
          readinessProbe:
          {{- if eq .type "port" }}
            tcpSocket:
              port: {{ .port }}
          {{- else if eq .type "command" }}
            exec:
              command:
                {{- range .command }} 
              - {{ . }}
                {{- end }}
          {{- end }}
            initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .readinessProbe.timeoutSeconds }}
            successThreshold: {{ .readinessProbe.successThreshold }}
            failureThreshold: {{ .readinessProbe.failureThreshold }}
          livenessProbe:
          {{- if eq .type "port"}}
            tcpSocket:
              port: {{ $.Values.port }}
          {{- else if eq .type "command" }}
            exec:
              command:
                {{- range .command }} 
              - {{ . }}
                {{- end }}
          {{- end }}
            initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .livenessProbe.timeoutSeconds }}
            successThreshold: {{ .livenessProbe.successThreshold }}
            failureThreshold: {{ .livenessProbe.failureThreshold }}
          {{- end }}
        {{- end }}
        {{- if .volumes }}
          volumeMounts:
        {{- range .volumes }}
          {{- if .name }}
          - name: {{ .name }}
            mountPath: {{ .mountPath | quote }}
            {{- if .secretName }}
            readOnly: true
            {{- end }}
          {{- end }}
        {{- end }}
        {{- end }}
    {{- if .volumes }}
      volumes:
      {{- range .volumes }}
        {{- if .name }}
        - name: {{ .name }}
          {{- if .secretName }}
          secret:
            secretName: {{ .secretName }}
          {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}
{{- end }}
